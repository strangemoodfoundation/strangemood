[package]
name = "services"
version = "0.1.0"
authors = ["Evan Conrad <evan@roomservice.dev>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.2"
worker = "0.0.7"
serde_json = "1.0.67"
serde = "*"
solana-sdk="1.9.1"
rand = "*"
chrono = "*"
thiserror="*"
getrandom = { version = "0.2", features = ["js"] }
jsonrpc="0.12.0"
uuid = { version = "0.8.2", features = ["serde", "v4"] }
strangemood="0.1.1"
anyhow = "1.0"
bs58="0.4.0"
anchor-lang = "0.18.2"
base64="0.13.0"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
